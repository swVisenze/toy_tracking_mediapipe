# MediaPipe object detection subgraph.

type: "ToyDetectionSubgraphCpu"

input_stream: "IMAGE:input_video"
output_stream: "DETECTIONS:output_detections"

# Transforms the input image on CPU to a 320x320 image. To scale the image, by
# default it uses the STRETCH scale mode that maps the entire input image to the
# entire transformed image. As a result, image aspect ratio may be changed and
# objects in the image may be deformed (stretched or squeezed), but the object
# detection model used in this graph is agnostic to that deformation.
node: {
  calculator: "ImageTransformationCalculator"
  input_stream: "IMAGE:input_video"
  output_stream: "IMAGE:transformed_input_video"
  node_options: {
    [type.googleapis.com/mediapipe.ImageTransformationCalculatorOptions] {
      output_width: 384
      output_height: 384
    }
  }
}


# Converts the transformed input image on CPU into an image tensor stored as a
# TfLiteTensor.
node {
  calculator: "TfLiteConverterCalculator"
  input_stream: "IMAGE:transformed_input_video"
  output_stream: "TENSORS:image_tensor"
  options: {
     [mediapipe.TfLiteConverterCalculatorOptions.ext] {
       zero_center: false
       norms: 58.395
       norms: 57.12
       norms: 57.375
       means: 123.675
       means: 116.28
       means: 103.53
     }
  }
}

#Runs a TensorFlow Lite model on CPU that takes an image tensor and outputs a
#vector of tensors representing, for instance, detection boxes/keypoints and
#scores.
node {
  calculator: "TfLiteInferenceCalculator"
  input_stream: "TENSORS:image_tensor"
  output_stream: "TENSORS:output_tensor"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteInferenceCalculatorOptions] {
      # model_path: "mediapipe/models/toy_detection_mobilenetv3_large100_2d_v1_tf.tflite"
      model_path: "mediapipe/models/toy_detection_m3l075_2d_v4_dv4_av3.tflite"

      # log_time: true
      delegate { xnnpack {} }
      # output_tensor_index: 304  #wh2d 1,96,96,4
      # output_tensor_index: 306  #heatmap2d 1,96,96,1
      # output_tensor_index: 307  #h2dmax 1,96,96,1

      output_tensor_index: 404  #wh2d 1,48,48,4
      output_tensor_index: 406  #heatmap2d 1,48,48,1
      output_tensor_index: 407  #h2dmax 1,48,48,1
    }
  }
}

node {
   calculator: "TfLiteTensorsToToyDetectionCalculator"
   input_stream: "TENSORS:output_tensor"
   output_stream: "DETECTIONS:detections"
   options: {
     [mediapipe.TfLiteTensorsToToyDetectionCalculatorOptions.ext] {
       # num_landmarks: 8
       num_boxes: 3
       down_ratio: 8
       min_score_thresh: 0.5
       input_image_width: 384
       input_image_height: 384
     }
   }
}

# Performs non-max suppression to remove excessive detections.
node {
  calculator: "NonMaxSuppressionCalculator"
  input_stream: "detections"
  output_stream: "filtered_detections"
  node_options: {
    [type.googleapis.com/mediapipe.NonMaxSuppressionCalculatorOptions] {
      min_suppression_threshold: 0.2
      max_num_detections: 3
      overlap_type: INTERSECTION_OVER_UNION
      return_empty_detections: true
    }
  }
}

node {
  calculator: "DetectionLabelIdToTextCalculator"
  input_stream: "filtered_detections"
  output_stream: "output_detections"
  node_options: {
    [type.googleapis.com/mediapipe.DetectionLabelIdToTextCalculatorOptions] {
      label_map_path: "mediapipe/models/object_detection_labelmap.txt"
    }
  }
}

