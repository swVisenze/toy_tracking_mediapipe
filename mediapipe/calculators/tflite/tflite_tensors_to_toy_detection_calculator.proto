// Copyright 2019 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// The option proto for the TfLiteTensorsToDetectionsCalculator.

syntax = "proto2";

package mediapipe;

import "mediapipe/framework/calculator.proto";

message TfLiteTensorsToToyDetectionCalculatorOptions {
  extend .mediapipe.CalculatorOptions {
    optional TfLiteTensorsToToyDetectionCalculatorOptions ext = 246514828;
  }

  // The number of output classes predicted by the detection model.
  optional int32 num_classes = 1;  // required
  // The number of output boxes predicted by the detection model.
  optional int32 num_boxes = 2;  // required

  optional int32 num_landmarks =3;
  optional int32 input_image_width = 4;
  optional int32 input_image_height = 5;

  // Score threshold for perserving decoded detections.
  optional float min_score_thresh = 6;
  // Whether the detection coordinates from the input tensors should be flipped
  // vertically (along the y-direction). This is useful, for example, when the
  // input tensors represent detections defined with a coordinate system where
  // the origin is at the top-left corner, whereas the desired detection
  // representation has a bottom-left origin (e.g., in OpenGL).
  optional bool flip_vertically = 7 [default = false];

  // Whether the detection coordinates from the input tensors should be flipped
  // horizontally (along the x-direction). This is useful, for example, when the
  // input image is horizontally flipped in ImageTransformationCalculator
  // beforehand.
  optional bool flip_horizontally = 8 [default = false];
}
